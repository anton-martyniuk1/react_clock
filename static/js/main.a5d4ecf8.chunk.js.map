{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","intervalId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","_prevProps","prevState","debug","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,WAAa,EALf,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,kCAeE,WACEC,cAAcR,KAAKD,cAhBvB,oBAmBE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAcT,KAAKU,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAMS,cAAcC,OAAO,IAAK,YAhC3C,GAA2BK,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAGX,IAAMG,EAAb,4MACEtB,MAAyB,CACvBa,UAAW,UACXU,UAAU,GAHd,EAMEpB,WAAa,EANf,uDAQE,WAAqB,IAAD,OAClBqB,SAASC,iBAAiB,eAAe,WACvC,EAAKlB,SAAS,CAAEgB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKlB,SAAS,CAAEgB,UAAU,OAG5BnB,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEM,UAAWK,QAC1B,QAnBP,gCAsBE,SAAmBQ,EAAqBC,GAEtCnB,QAAQoB,MAAR,uBAA8BD,EAAUd,UAAxC,eAAwDT,KAAKJ,MAAMa,cAxBvE,oBA2BE,WACE,MAAgCT,KAAKJ,MAA7Ba,EAAR,EAAQA,UAAWU,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOV,UAAWA,WAlCvC,GAAyBG,IAAMC,WCZ/BY,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.a5d4ecf8.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  intervalId = 0;\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  intervalId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.intervalId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: unknown, prevState: any) {\n    // eslint-disable-next-line no-console\n    console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}